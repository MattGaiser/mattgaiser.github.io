{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["library","add","fab","faCheckSquare","faCoffee","faCheck","faTimesCircle","faExclamationTriangle","faFacebookSquare","faTwitter","faPhoneAlt","faCommentAlt","faEnvelope","faPaperPlane","faUserEdit","toast","configure","autoClose","draggable","position","POSITION","TOP_CENTER","App","props","state","disabled","facebookStatusCode","twitterStatusCode","phoneStatusCode","textStatusCode","emailStatusCode","letterStatusCode","message","showModal","showRequestModal","substrings","estimatedCost","costModal","onTextAreaChange","bind","resetPage","closeModal","showApprovals","closeRequestModal","showRequestApprovals","sendRequestModal","showCostModal","hideCostModal","this","setState","success","text","length","e","twitterValidation","target","value","textValidation","code","className","icon","includes","listOfIssues","twitterResult","checkIssueList","textResult","concat","some","v","toLowerCase","push","role","statusCode","statusString","href","width","src","Button","onClick","minRows","onChange","messageStatusSymbolGenerator","toFixed","size","generateIssues","Modal","show","onHide","animation","Header","closeButton","Title","Body","Footer","variant","type","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0918234f.chunk.js","sourcesContent":["import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'rc-checkbox/assets/index.css';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {fab, faFacebookSquare, faTwitter} from '@fortawesome/free-brands-svg-icons'\nimport {\n    faCheckSquare,\n    faCoffee,\n    faCheck,\n    faTimesCircle,\n    faExclamationTriangle,\n    faPhoneAlt,\n    faCommentAlt,\n    faEnvelope,\n    faPaperPlane,\n    faUserEdit\n} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {Button} from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Modal from \"react-bootstrap/Modal\";\nlibrary.add(fab, faCheckSquare, faCoffee, faCheck, faTimesCircle, faExclamationTriangle, faFacebookSquare, faTwitter, faPhoneAlt, faCommentAlt, faEnvelope, faPaperPlane, faUserEdit);\n\ntoast.configure({\n    autoClose: 8000,\n    draggable: false,\n    position: toast.POSITION.TOP_CENTER\n});\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            disabled: false,\n            facebookStatusCode: 'ready',\n            twitterStatusCode: 'ready',\n            phoneStatusCode: 'ready',\n            textStatusCode: 'ready',\n            emailStatusCode: 'ready',\n            letterStatusCode: 'ready',\n            message: '',\n            showModal: false,\n            showRequestModal: false,\n            substrings: [\"can't\", \"won't\", \"don't\"],\n            estimatedCost: 38.13,\n            costModal: false\n\n        };\n        this.onTextAreaChange = this.onTextAreaChange.bind(this);\n        this.resetPage = this.resetPage.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.showApprovals = this.showApprovals.bind(this);\n        this.closeRequestModal = this.closeRequestModal.bind(this);\n        this.showRequestApprovals = this.showRequestApprovals.bind(this);\n        this.sendRequestModal = this.sendRequestModal.bind(this);\n        this.showCostModal = this.showCostModal.bind(this);\n        this.hideCostModal = this.hideCostModal.bind(this);\n\n    }\n    showCostModal(){\n        this.setState({\n            costModal: true\n        })\n    }\n    hideCostModal(){\n        this.setState({\n            costModal: false\n        })\n    }\n\n\n    showRequestApprovals(){\n        this.setState({\n            showRequestModal: true\n        })\n    }\n\n    showApprovals(){\n        this.setState({\n            showModal: true\n        })\n    }\n\n    closeRequestModal() {\n        this.setState({\n            showRequestModal: false,\n        })\n    }\n\n    sendRequestModal() {\n        this.setState({\n            showRequestModal: false,\n        });\n        toast.success(\"Invite sent\");\n    }\n\n\n    closeModal() {\n        this.setState({\n            showModal: false,\n        })\n    }\n\n    resetPage() {\n        this.setState({\n            disabled: false,\n            facebookStatusCode: 'ready',\n            twitterStatusCode: 'ready',\n            phoneStatusCode: 'ready',\n            textStatusCode: 'ready',\n            emailStatusCode: 'ready',\n            letterStatusCode: 'ready',\n            message: ''\n        });\n\n        toast.success(\"Message Sent\");\n    }\n\n\n    twitterValidation(text) {\n        if ( text.length > 280) {\n            return 'fail, too-long';\n        }\n        return 'ready';\n    }\n\n    textValidation(text) {\n        if ( text.length > 160) {\n            return 'fail, too-long';\n        }\n        return 'ready';\n    }\n\n    onTextAreaChange(e) {\n        this.setState({\n            twitterStatusCode: this.twitterValidation(e.target.value),\n            textStatusCode: this.textValidation(e.target.value),\n            message: e.target.value\n        })\n    }\n\n    messageStatusSymbolGenerator(code) {\n        if (code === 'ready') {\n            return (<span className='good-green'><FontAwesomeIcon icon=\"check\"/></span>);\n        }\n\n        if (code.includes('fail')){\n            return (<span className='fail-orange'><FontAwesomeIcon icon=\"exclamation-triangle\"/></span>);\n        }\n    }\n\n    generateIssues() {\n        let listOfIssues = [];\n        const twitterResult = this.checkIssueList(this.state.twitterStatusCode, \"tweet\");\n        const textResult = this.checkIssueList(this.state.textStatusCode, \"text\");\n        listOfIssues = listOfIssues.concat(twitterResult, textResult);\n        if (this.state.substrings.some(v => this.state.message.toLowerCase().includes(v))) {\n            listOfIssues.push(\n                <div className=\" col-4\" role=\"alert\">\n                <div className='alert alert-danger ml-4 mr-4'>\n                    Our style guide does not allow contractions. Please replace with the full word.\n                </div>\n            </div>)\n        }\n        return listOfIssues;\n    }\n\n    checkIssueList(statusCode, statusString) {\n        const listOfIssues = [];\n        if (statusCode.includes(\"too-long\")){\n            listOfIssues.push(<div className=\" col-4\" role=\"alert\">\n                <div className='alert alert-warning ml-4 mr-4'>\n                    This is too long to be a {statusString}. It will need to be broken into multiple {statusString}s.\n                </div>\n            </div>)\n        }\n\n        return listOfIssues;\n    }\n\n\n    render() {\n        return (\n            <div className=\"App container\">\n                <div className=\"header\">\n                    <a href=\"#default\" className=\"logo\">\n                        <img className=\"logo\" width=\"50px\"\n                                                             src=\"https://innisfil.ca/wp-content/uploads/2019/06/logo.svg\"/>\n                    </a>\n                    <div className=\"header-right glex\">\n                        <Button className=\"active glex\"\n                                onClick={this.resetPage}\n                        >Send Message</Button>\n                    </div>\n                </div>\n                <div className=\"cladding\">\n                    <div className=\"row\">\n                        <div className='col-8'>\n                            <p>Enter Your Message Below</p>\n                            <TextareaAutosize\n                                value={this.state.message}\n                                minRows={10}\n                                onChange={this.onTextAreaChange}\n                            />\n                            <div className=\"btn-group\">\n                                <Button\n                                    onClick={this.showRequestApprovals}>Request Approval</Button>\n                                <Button\n                                 onClick={this.showApprovals}>Show Approvals</Button>\n                            </div>\n                        </div>\n                        <div className='col-4 avenues-panel'>\n                            <div className='row'>\n                                <div className='col-8 margin-15-centre'>\n                                    <span>Message Type</span>\n                                </div>\n                                <div className='col-4  margin-15-centre text-center'>\n                                    <span>Status</span>\n                                </div>\n                                <div className='col-8 margin-15-centre'>\n                                    <span className='facebook'><FontAwesomeIcon icon={['fab', 'facebook-square']}/> Facebook</span>\n                                </div>\n                                <div className='col-4 icon-sizer'>\n                                    <span className='good-green'><FontAwesomeIcon icon=\"check\"/></span>\n\n                                </div>\n                                <div className='col-8 margin-15-centre'>\n                                    <span className='twitter'><FontAwesomeIcon\n                                        icon={['fab', 'twitter']}/> Twitter</span>\n                                </div>\n                                <div className='col-4 icon-sizer'>\n                                    {this.messageStatusSymbolGenerator(this.state.twitterStatusCode)}\n                                </div>\n                                <div className='col-8 margin-15-centre'>\n                                    <span className='phone'><FontAwesomeIcon icon=\"phone-alt\"/> Phone Call</span>\n                                </div>\n                                <div className='col-4 icon-sizer'>\n                                    <span className='good-green'><FontAwesomeIcon icon=\"check\"/></span>\n\n                                </div>\n                                <div className='col-8 margin-15-centre'>\n                                    <span className='text-message'><FontAwesomeIcon\n                                        icon=\"comment-alt\"/> Text Message</span>\n                                </div>\n                                <div className='col-4 icon-sizer'>\n                                    {this.messageStatusSymbolGenerator(this.state.textStatusCode)}\n\n                                </div>\n                                <div className='col-8 margin-15-centre'>\n                                    <span className='email'><FontAwesomeIcon icon=\"paper-plane\"/> Email</span>\n                                </div>\n                                <div className='col-4 icon-sizer'>\n                                    <span className='good-green'><FontAwesomeIcon icon=\"check\"/></span>\n\n                                </div>\n                                <div className='col-8 margin-15-centre'>\n                                    <span className='postal-letter'><FontAwesomeIcon\n                                        icon=\"envelope\"/> Physical Letter</span>\n                                </div>\n                                <div className='col-4 icon-sizer'>\n                                    <span className='good-green'><FontAwesomeIcon icon=\"check\"/></span>\n\n                                </div>\n                            </div>\n                            <br/>\n                            <div className='row'>\n                                <div className='col-8 text-left'>\n                                    <span className=''>Estimated Cost</span>\n                                </div>\n                                <div className='col-4'>\n                                    <span className=''>$CAD {this.state.estimatedCost.toFixed(2)}</span>\n                                </div>\n                                <Button className=\"active glex center-button\"\n                                        onClick={this.showCostModal}\n                                        size={'sm'}\n                                >Cost Breakdown</Button>\n\n                            </div>\n\n                        </div>\n                    </div>\n                    <hr/>\n                    <div>\n                        <p>Issues with the Message</p>\n                        <div className='row no-gutters'>\n                            {this.generateIssues()}\n                        </div>\n                    </div>\n                </div>\n                <Modal show={this.state.showModal} onHide={this.closeModal} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Approvals of Message</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body><div className='row'>\n                        <div className='col-8 margin-15-centre'>\n                            <span>Person</span>\n                        </div>\n                        <div className='col-4  margin-15-centre text-center'>\n                            <span>Status</span>\n                        </div>\n                        <div className='col-8 margin-15-centre'>\n                            <span className='facebook'><FontAwesomeIcon icon='user-edit'/> Mayor Lynn Dollin</span>\n                        </div>\n                        <div className='col-4 text-center'>\n                            <span className='good-green'>Approved</span>\n                        </div>\n                        <div className='col-8 margin-15-centre'>\n                            <span className='facebook'><FontAwesomeIcon icon='user-edit'/> Communication Director Ellen Anders</span>\n                        </div>\n                        <div className='col-4 text-center'>\n                            <span className='good-grey'>Pending</span>\n                        </div>\n                        <div className='col-8 margin-15-centre'>\n                            <span className='facebook'><FontAwesomeIcon icon='user-edit'/> Emergency Manager Mike Dawson</span>\n                        </div>\n                        <div className='col-4 text-center'>\n                            <span className='good-green'>Approved</span>\n                        </div>\n                    </div></Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={this.closeModal}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Modal show={this.state.showRequestModal} onHide={this.closeRequestModal} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Request Approval of Message</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div>\n                        <form className='form-setup row form-group'>\n                            <div className='col-6'>\n                                <p>Enter an email address:</p>\n                            </div>\n                            <div className='col-6'>\n                                <input\n                                    type=\"email\"\n                                />\n                            </div>\n\n                        </form>\n                    </div></Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.closeRequestModal}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.sendRequestModal}>\n                            Send Invite\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Modal show={this.state.costModal} onHide={this.hideCostModal} animation={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Cost Breakdown of Message</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div>\n                            <table>\n                                <tbody>\n                                <tr>\n                                    <th>Sending Medium</th>\n                                    <th>Price Per Unit</th>\n                                    <th>Units</th>\n                                    <th>Total Price</th>\n                                </tr>\n                                <tr>\n                                    <td>Facebook</td>\n                                    <td>$0.00</td>\n                                    <td>2136</td>\n                                    <td>Free</td>\n                                </tr>\n                                <tr>\n                                    <td>Twitter</td>\n                                    <td>$0.00</td>\n                                    <td>940</td>\n                                    <td>Free</td>\n                                </tr>\n                                <tr>\n                                    <td>Phone Call</td>\n                                    <td>$0.04</td>\n                                    <td>438</td>\n                                    <td>50</td>\n                                </tr>\n                                <tr>\n                                    <td>Text Message</td>\n                                    <td>$0.0025</td>\n                                    <td>742</td>\n                                    <td>50</td>\n                                </tr>\n                                <tr>\n                                    <td>Email</td>\n                                    <td>Free</td>\n                                    <td>6348</td>\n                                    <td>50</td>\n                                </tr>\n                                <tr>\n                                    <td>Physical Letter</td>\n                                    <td>$1.25</td>\n                                    <td>15</td>\n                                    <td>15</td>\n                                </tr>\n                                <tr>\n                                    <td></td>\n                                    <td></td>\n                                    <td>Total:</td>\n                                    <td>$38.13</td>\n                                </tr>\n                                <tr>\n                                    <td>Cost of personalized letter</td>\n                                    <td>$1.25</td>\n                                    <td>10,619</td>\n                                    <td>$13,273.75</td>\n                                </tr>\n                                <tr>\n                                    <td>Cost of bulk letter</td>\n                                    <td>$0.33</td>\n                                    <td>10,619</td>\n                                    <td>$3504.27</td>\n                                </tr>\n                                </tbody>\n                            </table>\n\n                        </div></Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.hideCostModal}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}